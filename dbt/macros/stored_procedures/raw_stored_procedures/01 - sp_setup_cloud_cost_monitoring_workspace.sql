--=========================================================================
-- This stored procedure creates databases, warehouses, object access roles, and grants 
-- privileges to those roles for the Cloud Cost Monitoring initiative. 
--
-- It also creates business function roles and grants them access to the object access roles. 
--
-- The procedure can be run in a dry run mode where it only outputs the SQL commands to 
-- be executed without actually executing them. 
--=========================================================================
CREATE OR REPLACE PROCEDURE SETUP_CLOUD_COST_MONITORING_WORKSPACE(DRY_RUN BOOLEAN)
RETURNS VARCHAR
LANGUAGE JAVASCRIPT
EXECUTE AS CALLER
AS
$$
  // create databases
  snowflake.execute({sqlText: "USE ROLE SYSADMIN"});
  if (!DRY_RUN) {
    snowflake.execute({sqlText: "CREATE DATABASE CLOUD_COST_MONITORING_DEV"});
    snowflake.execute({sqlText: "CREATE DATABASE CLOUD_COST_MONITORING_TEST"});
    snowflake.execute({sqlText: "CREATE DATABASE CLOUD_COST_MONITORING_PROD"});
    snowflake.execute({sqlText: "CREATE SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING"});
  } else {
    // dry run
    snowflake.execute({sqlText: "SELECT 'CREATE DATABASE CLOUD_COST_MONITORING_DEV' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'CREATE DATABASE CLOUD_COST_MONITORING_TEST' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'CREATE DATABASE CLOUD_COST_MONITORING_PROD' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'CREATE SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING' AS COMMAND"});
  }

  // create warehouses
  snowflake.execute({sqlText: "USE ROLE SYSADMIN"});
  if (!DRY_RUN) {
    snowflake.execute({sqlText: `CREATE WAREHOUSE
      CLOUD_COST_MONITORING_DEV_WH
      COMMENT='Warehouse for powering developer activities for the cloud cost monitoring project'
      WAREHOUSE_SIZE=XSMALL
      AUTO_SUSPEND=60
      INITIALLY_SUSPENDED=TRUE`});
  } else {
    // dry run
    snowflake.execute({sqlText: `SELECT 'CREATE WAREHOUSE
      CLOUD_COST_MONITORING_DEV_WH
      COMMENT=''Warehouse for powering developer activities for the cloud cost monitoring project''
      WAREHOUSE_SIZE=XSMALL
      AUTO_SUSPEND=60
      INITIALLY_SUSPENDED=TRUE' AS COMMAND`});
  }

  // create object access roles for databases
  snowflake.execute({sqlText: "USE ROLE SECURITYADMIN"});
  if (!DRY_RUN) { 
    snowflake.execute({sqlText: "CREATE ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE"}); 
    snowflake.execute({sqlText: "CREATE ROLE CLOUD_COST_MONITORING_TEST_READ_WRITE"}); 
    snowflake.execute({sqlText: "CREATE ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE"}); 
    snowflake.execute({sqlText: "CREATE ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ"}); 
    snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE TO ROLE SYSADMIN"}); 
    snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_TEST_READ_WRITE TO ROLE SYSADMIN"}); 
    snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE TO ROLE SYSADMIN"}); 
    snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ TO ROLE SYSADMIN"}); 
  } else { 
    // dry run 
    snowflake.execute({sqlText: "SELECT 'CREATE ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'CREATE ROLE CLOUD_COST_MONITORING_TEST_READ_WRITE' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'CREATE ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'CREATE ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE TO ROLE SYSADMIN' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_TEST_READ_WRITE TO ROLE SYSADMIN' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE TO ROLE SYSADMIN' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ TO ROLE SYSADMIN' AS COMMAND"}); 
  }
  
  // create object access roles for warehouses
  snowflake.execute({sqlText: "USE ROLE SECURITYADMIN"});
  if (!DRY_RUN) {
      snowflake.execute({sqlText: "CREATE ROLE CLOUD_COST_MONITORING_DEV_WH_ALL"});
      snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_DEV_WH_ALL TO ROLE SYSADMIN"});
  } else {
      // dry run
      snowflake.execute({sqlText: "SELECT 'CREATE ROLE CLOUD_COST_MONITORING_DEV_WH_ALL' AS COMMAND"});
      snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_DEV_WH_ALL TO ROLE SYSADMIN' AS COMMAND"});
  }

  // grant privileges to object access roles
  snowflake.execute({sqlText: "USE ROLE SECURITYADMIN"});
  if (!DRY_RUN) {
    snowflake.execute({sqlText: "GRANT CREATE SCHEMA, USAGE ON DATABASE CLOUD_COST_MONITORING_DEV TO ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE"});
    snowflake.execute({sqlText: "GRANT ALL PRIVILEGES ON WAREHOUSE CLOUD_COST_MONITORING_DEV_WH TO ROLE CLOUD_COST_MONITORING_DEV_WH_ALL"});
    snowflake.execute({sqlText: "GRANT CREATE SCHEMA, USAGE ON DATABASE CLOUD_COST_MONITORING_TEST TO ROLE CLOUD_COST_MONITORING_TEST_READ_WRITE"});
    snowflake.execute({sqlText: "GRANT CREATE SCHEMA, USAGE ON DATABASE CLOUD_COST_MONITORING_PROD TO ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE"});
    snowflake.execute({sqlText: "USE ROLE SYSADMIN"});
    snowflake.execute({sqlText: "GRANT OWNERSHIP ON SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE"});
    snowflake.execute({sqlText: "USE ROLE SECURITYADMIN"});
    snowflake.execute({sqlText: "GRANT USAGE ON DATABASE CLOUD_COST_MONITORING_PROD TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ"});
    snowflake.execute({sqlText: "GRANT USAGE ON SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ"});
    snowflake.execute({sqlText: "GRANT SELECT ON ALL TABLES IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ"});
    snowflake.execute({sqlText: "GRANT SELECT ON FUTURE TABLES IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ"});
    snowflake.execute({sqlText: "GRANT SELECT ON ALL VIEWS IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ"});
    snowflake.execute({sqlText: "GRANT SELECT ON FUTURE VIEWS IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ"});
  } else {
    // dry run
    snowflake.execute({sqlText: "SELECT 'GRANT CREATE SCHEMA, USAGE ON DATABASE CLOUD_COST_MONITORING_DEV TO ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'GRANT ALL PRIVILEGES ON WAREHOUSE CLOUD_COST_MONITORING_DEV_WH TO ROLE CLOUD_COST_MONITORING_DEV_WH_ALL' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'GRANT CREATE SCHEMA, USAGE ON DATABASE CLOUD_COST_MONITORING_TEST TO ROLE CLOUD_COST_MONITORING_TEST_READ_WRITE' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT CREATE SCHEMA, USAGE ON DATABASE CLOUD_COST_MONITORING_PROD TO ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT OWNERSHIP ON SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_READ_WRITE' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT USAGE ON DATABASE CLOUD_COST_MONITORING_PROD TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT USAGE ON SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT SELECT ON ALL TABLES IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT SELECT ON FUTURE TABLES IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT SELECT ON ALL VIEWS IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ' AS COMMAND"}); 
    snowflake.execute({sqlText: "SELECT 'GRANT SELECT ON FUTURE VIEWS IN SCHEMA CLOUD_COST_MONITORING_PROD.REPORTING TO ROLE CLOUD_COST_MONITORING_PROD_REPORTING_READ' AS COMMAND"}); 
  }
  
  // create business function roles and grant access to object access roles
  snowflake.execute({sqlText: "USE ROLE SECURITYADMIN"});
  if (!DRY_RUN) {
    snowflake.execute({sqlText: "CREATE ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER"});
    snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER TO ROLE SYSADMIN"});
    snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE TO ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER"});
    snowflake.execute({sqlText: "GRANT ROLE CLOUD_COST_MONITORING_DEV_WH_ALL TO ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER"});
    snowflake.execute({sqlText: "GRANT ROLE FIVETRAN_READ_ROLE TO ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER"});
  } else {
    // dry run
    snowflake.execute({sqlText: "SELECT 'CREATE ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER TO ROLE SYSADMIN' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_DEV_READ_WRITE TO ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE CLOUD_COST_MONITORING_DEV_WH_ALL TO ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER' AS COMMAND"});
    snowflake.execute({sqlText: "SELECT 'GRANT ROLE FIVETRAN_READ_ROLE TO ROLE CLOUD_COST_MONITORING_DEV_TRANSFORMER' AS COMMAND"});
  }

  return "Cloud Cost Monitoring initiative objects created successfully.";
$$;