CREATE OR REPLACE PROCEDURE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.CREATE_STORED_PROCS_MART()
RETURNS VARCHAR
LANGUAGE JAVASCRIPT
AS
$$
  var createTableSQL = [
    "CREATE OR REPLACE TABLE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.WAREHOUSE_METERING_HISTORY AS (SELECT * FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.WAREHOUSE_METERING_HISTORY);",
    "CREATE OR REPLACE TABLE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.SNOWPIPES AS (SELECT *, (SELECT MAX(INGESTION_TIME) FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.SNOWPIPES) AS LATEST_INGESTION_TIME, INGESTION_TIME = LATEST_INGESTION_TIME AS IS_LATEST FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.SNOWPIPES);",
    "CREATE OR REPLACE TABLE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.SNOWPIPE_USAGE_HISTORY AS (SELECT * FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.SNOWPIPE_USAGE_HISTORY);",
    "CREATE OR REPLACE TABLE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.QUERY_HISTORY AS (SELECT * FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.QUERY_HISTORY);",
    "CREATE OR REPLACE TABLE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.TASKS AS (SELECT *, (SELECT MAX(INGESTION_TIME) FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.TASKS) AS LATEST_INGESTION_TIME, INGESTION_TIME = LATEST_INGESTION_TIME AS IS_LATEST FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.TASKS);",
    "CREATE OR REPLACE TABLE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.TASK_USAGE_HISTORY AS (SELECT * FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS.TASK_USAGE_HISTORY);",
    "CREATE OR REPLACE TABLE RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.SNOWFLAKE_COST AS (SELECT 'Snowflake Compute' AS SERVICE, SUM(CREDITS_USED) * 3.00 AS COST, START_TIME::DATE AS START_DATE FROM RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART.WAREHOUSE_METERING_HISTORY);",
    "USE ROLE SECURITYADMIN;",
    "CREATE ROLE IF NOT EXISTS RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE TO ROLE SYSADMIN; // always do this",
    "USE ROLE SECURITYADMIN;",
    "GRANT USAGE ON DATABASE RANDY_PITCHER_WORKSPACE_DEV TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT USAGE ON SCHEMA RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT SELECT ON ALL VIEWS IN SCHEMA RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT SELECT ON FUTURE VIEWS IN SCHEMA RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT SELECT ON ALL TABLES IN SCHEMA RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT SELECT ON FUTURE TABLES IN SCHEMA RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT SELECT ON ALL MATERIALIZED VIEWS IN SCHEMA RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;",
    "GRANT SELECT ON FUTURE MATERIALIZED VIEWS IN SCHEMA RANDY_PITCHER_WORKSPACE_DEV.STORED_PROCS_MART TO ROLE RANDY_PITCHER_WORKSPACE_DEV_STORED_PROCS_MART_READ_ROLE;"
  ];
  
  var result = "";
  
  for (var i = 0; i < createTableSQL.length; i++) {
    try {
      snowflake.execute({ sqlText: createTableSQL[i] });
      result += "Table created successfully: " + createTableSQL[i] + "\n";
    } catch (err) {
      result += "Error creating table: " + createTableSQL[i] + "\n" + err + "\n";
    }
  }
  
  return result;
$$;